\subsection*{Bevis}
Vi viser at hvis algoritmen fortæller os at tallet $n$ er sammensat, så er det korrekt.\\
Vi antager, at $n$ er et primtal, men algoritmen fortæller os det er sammensat. Derved har vi 
\begin{align*}
a^m \not\equiv \pm1\ (\mbox{mod}\ n)
\end{align*}
samt at for $s\in 0\leq s\leq r-1$ gælder der
\begin{align*}
a^{2^s\cdot m} \not\equiv -1\ (\mbox{mod}\ n)
\end{align*}


\includegraphics[scale=0.5]{1}

\\

    n = h*2**k+1
    for a in 1..n
        b = a.to_bn.mod_exp((n-1)/2,n)
        if (b == n-1)
            puts n.to_s.length
            return "#{n} is prime"
        end
    end
    return "#{n} is not prime"
end


def alg2(n)
	t = n-1
	e = 0
	b = Array.new
	b2 = Array.new
	b3 = Array.new
	while t % 2 == 0
		e += 1
		t = t/2
	end
	puts t
	puts e
	for j in 0..(2*t+1)
		b[j] = (j+1).to_bn.mod_exp(2*t, n)
		if b[j] != 1
			b2.push(b[j])
		end
	end
	if b2.length == 0
		return "#{n} is composite"
	end	
	for i in 0..(b2.length-1)
		for k in 0..(e-2)
			if b[k].to_bn.mod_exp(2**k,n) == 1
				return i.to_bn.mod_exp(2**k,n)
			end
		end	
	end
	return "#{n} is composite"
end

puts alg2(17)